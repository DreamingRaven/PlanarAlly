# Default values for planarally.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
#
#

## @section Planarly Configuration

## @param replicaCount [string] Server deployment replica count
replicaCount: 1

image:
  ## @param image.registry [string] Image container registry
  registry: docker.io
  ## @param image.repository [string] Image repository
  repository: kruptein/planarally
  ## @param image.pullPolicy [string] Image pull policy
  pullPolicy: IfNotPresent
  ## @param image.tag [string] Overrides the image tag whose default is the chart appVersion.
  tag: ""

## @param imagePullSecrets [array] Image pull secrets
imagePullSecrets: []
## @param nameOverride [string] Partial name override
nameOverride: ""
## @param fullnameOverride [string] Full name override
fullnameOverride: ""

serviceAccount:
  ## @param serviceAccount.create [string] Specifies whether a service account should be created
  create: true
  ## @param serviceAccount.annotations [object] Annotations to add to the service account
  annotations: {}
  ## @param serviceAccount.name [string] The name of the service account to use. If not set and create is true, a name is generated using the fullname template
  name: ""

## @param podAnnotations [object] Pod annotations
podAnnotations: {}

## @param podSecurityContext [object] Pod security context
podSecurityContext: {}
  # fsGroup: 2000
  #
## @param securityContext [object] Security context
securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

persistence:
  ## @param persistence.enabled [string] If true use persistent volume else use emptyDir
  enabled: false
  ## @param persistence.generatePVC [string] Generate PVC or use existing one does nothing if persistence.enabled is false
  generatePVC: true
  ## @param persistence.storageClass [string] Storage class
  storageClass: ""
  ## @param persistence.annotations [object] Annotations
  annotations: {}
  ## @param persistence.labels [object] Labels
  labels: {}
  ## @param persistence.accessModes [array] Access modes
  accessModes: [ReadWriteOnce]
  ## @param persistence.existingClaim [string] Manually managed PVC name to use
  existingClaim: ""
  ## @param persistence.size [string] Size of the storage for the DB and assets
  size: 8Gi

service:
  ## @param service.type [string] Service type
  type: ClusterIP

## @param ports [array] Ports to expose, tie to the service, and ingress
ports:
- name: http
  containerPort: 8000
  servicePort: 80
  protocol: TCP

ingress:
  ## @param ingress.enabled [string] Enable ingress
  enabled: false
  ## @param ingress.className [string] Ingress class
  className: ""
  ## @param ingress.annotations [object] Ingress annotations
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  ## @param ingress.hosts [array] Ingress hosts
  hosts:
    - host: planarally.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  ## @param ingress.tls [array] Ingress TLS
  tls: []
  #  - secretName: planarally-tls
  #    hosts:
  #      - planarally.local

## @param resources [object] Resources
resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  ## @param autoscaling.enabled [string] Enable autoscaling
  enabled: false
  ## @param autoscaling.minReplicas [string] Minimum number of replicas
  minReplicas: 1
  ## @param autoscaling.maxReplicas [string] Maximum number of replicas
  maxReplicas: 3
  ## @param autoscaling.targetCPUUtilizationPercentage [string] Target CPU utilization percentage
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

## @param nodeSelector [object] Node selector
nodeSelector: {}

## @param tolerations [array] Tolerations
tolerations: []

## @param affinity [object] Node affinity
affinity: {}
